{"version":3,"sources":["services/auth.js","context/index.js","services/main.js","components/Navbar.js","components/Layout.js","pages/students/AddStudent.js","components/Signup.js","pages/students/AllStudents.js","pages/students/StudentDetail.js","components/Login.js","pages/Dashboard.js","pages/groups/AddGroup.js","pages/groups/GroupDetail.js","pages/students/EditStudent.js","pages/students/AddMeassure.js","pages/groups/AllGroups.js","Router.js","serviceWorker.js","index.js"],"names":["SERVICE","axios","create","withCredentials","baseURL","AUTH_SERVICE","signup","user","a","post","login","logOut","get","checkUser","MyContext","createContext","MyProvider","state","loggedUser","studentId","undefined","logUser","setState","then","response","console","log","catch","err","setStudentId","this","Provider","value","props","children","Component","MAIN_SERVICE","getUser","getGroup","group","id","getStudents","students","addStudent","student","addGroup","addMeasurement","measurement","update","_id","put","deleteStudent","delete","data","Navbar","className","to","profesorName","onClick","context","type","role","aria-label","aria-expanded","data-target","aria-hidden","activeClassName","contextType","Layout","Consumer","history","username","AddStudent","level","name","lastname1","lastname2","age","gender","getStudentId","e","preventDefault","msg","userData","handleInput","target","push","currentGroups","groups","onSubmit","onChange","disabled","map","i","key","required","Signup","userMsg","error","AllStudents","getGroups","match","params","prevState","componentDidMount","name2","StudentDetail","measurements","ms","weight","height","hip","velocity","flexibility","lowerMass","abdominalFlat","upperMass","restingHeartRate","stressHeartRate","heartRateRecovery","meters","Math","round","ica","domainPadding","theme","VictoryTheme","material","tickValues","dependentAxis","colorScale","x","y","Login","password","Dashboard","addClass","isLoading","toggleMenu","AddGroup","body","GroupDetail","timesMeasure","getGroupDetail","goToDetail","getMeasurementsTimes","length","EditStudent","updateStudent","status","AddMeasure","abdomen","power","imc","abdominalFat","body1","calculateValues","goBack","AllGroups","Router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oUAGMA,EAAUC,IAAMC,OAAO,CAAEC,iBAAiB,EAAMC,QAFtC,qDAoBDC,EAhBM,CACnBC,OAAO,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,sEACOR,EAAQS,KAAK,UAAWF,GAD/B,mFAAF,mDAAC,GAIPG,MAAM,WAAD,4BAAE,WAAOH,GAAP,SAAAC,EAAA,sEACQR,EAAQS,KAAK,SAAUF,GAD/B,mFAAF,mDAAC,GAGNI,OAAO,WAAD,4BAAE,sBAAAH,EAAA,sEACOR,EAAQY,IAAI,WADnB,mFAAF,kDAAC,GAGPC,UAAU,WAAD,4BAAE,WAAON,GAAP,SAAAC,EAAA,sEACIR,EAAQY,IAAI,QAASL,GADzB,mFAAF,mDAAC,ICbCO,EAAYC,0BA2DVC,E,2MAxDbC,MAAQ,CACNC,WAAY,KACZC,eAAWC,G,EAObC,QAAU,SAACH,GACT,EAAKI,SAAS,CAAEJ,gB,EAYlBL,UAAY,WACVR,EAAaQ,YACZU,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKF,SAAS,CACZJ,WAAYM,OAGfG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,O,EAG9BjB,OAAS,WACPN,EAAaM,SACVY,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKF,SAAS,CAAEJ,WAAY,UAE7BS,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,O,EAGhCC,aAAe,SAACV,GACd,EAAKG,SAAS,CAAEH,e,mFArChBW,KAAKjB,c,+BAwCG,IACAI,EAAyCa,KAAzCb,MAAOI,EAAkCS,KAAlCT,QAASV,EAAyBmB,KAAzBnB,OAAQkB,EAAiBC,KAAjBD,aAChC,OACE,kBAACf,EAAUiB,SAAX,CAAoBC,MAAO,CAAEf,QAAOI,UAASV,SAAQkB,iBAClDC,KAAKG,MAAMC,c,GAnDKC,aCFnBnC,EAAUC,IAAMC,OAAO,CAAEC,iBAAiB,EAAMC,QAFtC,qDA8CDgC,EA1CM,CACnBC,QAAQ,WAAD,4BAAE,WAAO9B,GAAP,SAAAC,EAAA,sEACMR,EAAQY,IAAI,SAAUL,GAD5B,mFAAF,mDAAC,GAIR+B,SAAS,WAAD,4BAAE,WAAOC,GAAP,eAAA/B,EAAA,6DACFgC,EAAKD,EAAMC,GADT,SAEKxC,EAAQY,IAAR,kBAAuB4B,GAAMD,GAFlC,mFAAF,mDAAC,GAKTE,YAAY,WAAD,4BAAE,WAAOC,GAAP,SAAAlC,EAAA,sEACER,EAAQY,IAAI,YAAa8B,GAD3B,mFAAF,mDAAC,GAIZC,WAAW,WAAD,4BAAE,WAAOC,GAAP,SAAApC,EAAA,sEACGR,EAAQS,KAAR,YAA0BmC,GAD7B,mFAAF,mDAAC,GAIXC,SAAS,WAAD,4BAAE,WAAON,GAAP,SAAA/B,EAAA,sEACKR,EAAQS,KAAR,UAAwB8B,GAD7B,mFAAF,mDAAC,GAITO,eAAe,WAAD,4BAAE,WAAMC,GAAN,SAAAvC,EAAA,sEACDR,EAAQS,KAAR,YAA0BsC,GADzB,mFAAF,mDAAC,GAIfC,OAAO,WAAD,4BAAE,WAAOJ,GAAP,eAAApC,EAAA,6DACAgC,EAAKI,EAAQK,IADb,SAEOjD,EAAQkD,IAAR,uBAA4BV,GAAMI,GAFzC,mFAAF,mDAAC,GAKPO,cAAc,WAAD,4BAAE,WAAOP,GAAP,eAAApC,EAAA,6DACbiB,QAAQC,IAAI,QAAQkB,GAEdJ,EAAKI,EAHE,SAIA5C,EAAQoD,OAAR,oBAA4BZ,GAAM,CAACa,KAAO,CAACb,QAJ3C,mFAAF,mDAAC,IChCKc,E,iLAGb,OACI,oCACI,yBAAKC,UAAU,WACX,kBAAC,IAAD,CAASA,UAAU,cAAcC,GAAI,cAArC,aACA,yBAAKD,UAAU,4BACX,yBAAKA,UAAU,yCACX,0BAAMA,UAAU,eACZ,yBAAKA,UAAU,YACX,0BAAMA,UAAU,iBAAgB,4BAAQA,UAAU,qCAC9C,gCAASzB,KAAKG,MAAMwB,iBAIhC,yBAAKF,UAAU,mBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAASC,GAAI,cAAeD,UAAU,eAAtC,WAEJ,wBAAIA,UAAU,mBACd,0BAAMA,UAAU,eACZ,2BAAOA,UAAU,iBAAiBG,QAAS5B,KAAK6B,QAAQhD,OAAQiD,KAAK,SAAS5B,MAAM,0BAMxG,yBAAKuB,UAAU,SAASM,KAAK,aAAaC,aAAW,mBACjD,yBAAKP,UAAU,gBACX,uBAAGM,KAAK,SAASN,UAAU,uBAAuBO,aAAW,OAAOC,gBAAc,QAAQC,cAAY,sBAClG,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAI1B,yBAAKzB,GAAG,aAAae,UAAU,eAC3B,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAASA,UAAU,cAAcW,gBAAgB,YAAYV,GAAI,cAAjE,WACA,yBAAKD,UAAU,yCACX,0BAAMA,UAAU,eAAhB,UAGA,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAASC,GAAI,cAAeD,UAAU,cAAcW,gBAAgB,aAApE,cACA,wBAAIX,UAAU,mBACd,kBAAC,IAAD,CAASC,GAAI,mBAAoBD,UAAU,cAAcW,gBAAgB,aAAzE,mBAGR,yBAAKX,UAAU,yCACX,0BAAMA,UAAU,eAAhB,WAGA,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAASC,GAAI,gBAAiBD,UAAU,cAAcW,gBAAgB,aAAtE,eACA,wBAAIX,UAAU,mBACd,kBAAC,IAAD,CAASC,GAAI,uBAAwBD,UAAU,cAAcW,gBAAgB,aAA7E,4B,GAzDA/B,aAqEpCmB,EAAOa,YAAcrD,E,ICpEAsD,E,iLAET,IAAD,OACP,OAEE,kBAACtD,EAAUuD,SAAX,MACG,gBAAGpD,EAAH,EAAGA,MAAH,OACC,oCACE,kBAAC,EAAD,CAAQqD,QAAS,EAAKrC,MAAMqC,QAASb,aAAcxC,EAAMC,YAAcD,EAAMC,WAAWqD,WACxF,6BAAShB,UAAU,WACjB,yBAAKA,UAAU,aACd,EAAKtB,MAAMC,mB,GAXUC,a,yjBAuBpCiC,EAAOD,YAAcrD,E,ICtBA0D,E,2MAEnBvD,MAAQ,CACN2B,QAAS,CACP6B,MAAO,GACPlC,MAAO,GACPmC,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,IAAK,EACLC,OAAQ,IAEVvE,KAAM,GACNiB,cAAUJ,G,EAkBZ2D,aAAe,SAAC5D,GACd,EAAKwC,QAAQ9B,aAAaV,I,EAI5BwB,W,uCAAa,WAAMqC,GAAN,iBAAAxE,EAAA,6DACXwE,EAAEC,iBACMrC,EAAY,EAAK3B,MAAjB2B,QAFG,kBAIcR,EAAaO,WAAWC,GAJtC,OAIHpB,EAJG,OAKT,EAAKF,SACH,CAAEE,SAAUA,EAAS6B,KAAK6B,MAE5BzD,QAAQC,IAAIF,EAAS6B,KAAK6B,KARjB,kDAUTzD,QAAQC,IAAR,KAAe,KAAEF,UAVR,0D,wDAuBbc,S,sBAAW,gCAAA9B,EAAA,6DACH2E,EAAW,EAAKxB,QAAQ1C,MAAMC,WAC9BsB,EAAK2C,EAASlC,IAFX,SAGchD,IAAMW,IAAN,gEAAmE4B,IAHjF,OAGHhB,EAHG,OAIT,EAAKF,SACH,CAAEf,KAAMiB,EAAS6B,KAAK9C,OALf,2C,EASX6E,YAAc,SAAAJ,GACZ,EAAK1D,SAAS,CACZsB,QAAQ,EAAD,GACF,EAAK3B,MAAM2B,QADT,eAEJoC,EAAEK,OAAOX,KAAOM,EAAEK,OAAOrD,W,mFAM9B,IAAKF,KAAK6B,QAAQ1C,MAAMC,WAAY,OAAOY,KAAKG,MAAMqC,QAAQgB,KAAK,UACnExD,KAAKQ,a,+BAGG,IACAM,EAAYd,KAAKb,MAAjB2B,QACF2C,EAAgBzD,KAAKb,MAAMV,KAAKiF,OAGtC,OAFA/D,QAAQC,IAAI,QAAS6D,GAGnB,kBAAC,EAAD,KACE,6BAAShC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,MAAMkC,SAAU3D,KAAKa,YACnC,yBAAKY,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,UACb,4BAAQmB,KAAK,QAAQ1C,MAAOY,EAAQ6B,MAAOiB,SAAU5D,KAAKsD,aACxD,4BAAQO,UAAQ,IACfJ,GAAiBA,EAAcK,KAAI,SAACrD,EAAOsD,GAAR,OAClC,4BAAQC,IAAKD,EAAG7D,MAAOO,EAAMkC,OAAQlC,EAAMkC,YAIjD,yBAAKlB,UAAU,UACb,4BAAQmB,KAAK,QAAQ1C,MAAOY,EAAQL,MAAOmD,SAAU5D,KAAKsD,aACxD,4BAAQO,UAAQ,IACfJ,GAAiBA,EAAcK,KAAI,SAACrD,EAAOsD,GAAR,OAClC,4BAAQC,IAAKD,EAAG7D,MAAOO,EAAMA,OAAQA,EAAMA,aAMnD,yBAAKgB,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQ8B,KACfd,KAAK,OACLc,KAAK,UAGT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,qBACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQ+B,UACff,KAAK,OACLc,KAAK,eAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,qBACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQgC,UACfhB,KAAK,OACLc,KAAK,eAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQiC,IACfjB,KAAK,SACLc,KAAK,SAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,UACb,4BAAQmB,KAAK,SAAS1C,MAAOY,EAAQkC,OAAQY,SAAU5D,KAAKsD,aAC1D,4BAAQO,UAAQ,IAChB,4BAAQ3D,MAAM,YAAd,YACA,4BAAQA,MAAM,aAAd,gBAIN,yBAAKuB,UAAU,SACb,4BAAQA,UAAU,iCAAiCK,KAAK,UAAxD,+B,GA1KgBzB,aAwLxCqC,EAAWL,YAAcrD,E,ICnHVkF,E,2MAvEb/E,MAAQ,CACNV,KAAM,CACJ0F,QAAS,K,EAIbb,YAAc,SAACJ,GAAO,IACZzE,EAAS,EAAKU,MAAdV,KAERA,EADYyE,EAAEK,OAAOX,MACTM,EAAEK,OAAOrD,MACrB,EAAKV,SAAS,CAAEf,U,EAGlBkF,SAAW,SAACT,GACVA,EAAEC,iBACF5E,EAAaC,OAAO,EAAKW,MAAMV,MAC5BgB,MAAK,SAACC,GACL,IAAIyE,EAAUzE,EAAS6B,KAAK6B,IAC5B,EAAKjD,MAAMqC,QAAQgB,KAAK,UACxB7D,QAAQC,IAAIuE,MAEbtE,OAAM,SAACuE,GACNzE,QAAQC,IAAIwE,O,wEAIR,IACDD,EAAWnE,KAAKb,MAAMV,KAAtB0F,QACP,OACE,yBAAK1C,UAAU,uCACb,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,sBAAsB0C,GACnC,0BAAM1C,UAAU,UAAUkC,SAAU3D,KAAK2D,UACvC,yBAAKlC,UAAU,2BACb,wBAAIA,UAAU,cAAd,WACA,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,2BAAOA,UAAU,QAAQmC,SAAU5D,KAAKsD,YAAaxB,KAAK,OAAOc,KAAK,cAGxE,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,qBACA,2BAAOA,UAAU,QAAQmC,SAAU5D,KAAKsD,YAAaxB,KAAK,OAAOc,KAAK,eAGxE,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,qBACA,2BAAOA,UAAU,QAAQmC,SAAU5D,KAAKsD,YAAaxB,KAAK,OAAOc,KAAK,eAGxE,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,2BAAOA,UAAU,QAAQmC,SAAU5D,KAAKsD,YAAaxB,KAAK,QAAQc,KAAK,WAGzE,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,2BAAOA,UAAU,QAAQmC,SAAU5D,KAAKsD,YAAaxB,KAAK,WAAWc,KAAK,cAG5E,yBAAKnB,UAAU,SACf,2BAAOA,UAAU,iCAAiCK,KAAK,SAAS5B,MAAM,oB,GA9D/DG,a,6jBCIAgE,E,2MAEjBlF,MAAQ,CACJyB,cAAUtB,EACVmB,WAAOnB,G,EAGXqB,Y,sBAAc,4BAAAjC,EAAA,sEACa4B,EAAaK,cAD1B,OACJjB,EADI,OAEV,EAAKF,SAAS,CACVoB,SAAUlB,EAAS6B,KAAKX,WAHlB,2C,EAOd0D,U,sBAAY,gCAAA5F,EAAA,6DACAgC,EAAO,EAAKP,MAAMoE,MAAMC,OAAxB9D,GADA,SAE0BvC,IAAMW,IAAN,kEAAqE4B,IAF/F,gBAEQD,EAFR,EAEAc,KAAQd,MAChB,EAAKjB,SAAS,CACViB,UAJI,2C,EAQZY,c,uCAAgB,WAAOX,GAAP,SAAAhC,EAAA,sEAEN4B,EAAae,cAAcX,GAC5BjB,MAAK,YAAc,EAAX8B,KACL,EAAK/B,UAAS,SAAAiF,GACV,OAAO,KACAA,MAGX,EAAKC,uBAER7E,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAXlB,2C,yIAeZ,IAAKE,KAAK6B,QAAQ1C,MAAMC,WAAY,OAAOY,KAAKG,MAAMqC,QAAQgB,KAAK,UACnExD,KAAKW,cACLX,KAAKsE,c,2CAGLtE,KAAKqB,kB,+BAGC,IAAD,SACuBrB,KAAKb,MAAzByB,EADH,EACGA,SAAUH,EADb,EACaA,MAGlB,OAFAd,QAAQC,IAAIa,GAGR,kBAAC,EAAD,KACI,6BAASgB,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMA,UAAU,+BAA+BC,GAAI,wBAC/C,mDACA,0BAAMD,UAAU,iBACZ,uBAAGA,UAAU,oBAMjC,yBAAKA,UAAU,iBACX,2BAAOA,UAAU,uBACb,+BACI,4BACI,6BACA,sCACA,oCACA,yCACA,sCACA,6BACA,+BAGR,+BACKb,GAAYA,EAASkD,KAAI,SAAChD,EAASiD,GAAV,OACtB,wBAAIC,IAAKD,GACL,4BAAKA,GACL,4BAAKjD,EAAQ8B,KAAb,IAAoB9B,EAAQ+B,UAA5B,IAAwC/B,EAAQ6D,OAChD,4BAAK7D,EAAQiC,KACb,4BAAKjC,EAAQkC,QAKb,4BAAI,0BAAMvB,UAAU,kBAAhB,oBACJ,4BACI,kBAAC,IAAD,CAAMC,GAAI,2BAA4BE,QAAS,kBAAM,EAAKqB,aAAanC,EAAQK,OAA/E,uBAEJ,4BACI,yBAAKM,UAAU,2BACX,uBAAGA,UAAU,qBACb,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAE,kCAA6BZ,EAAQK,MAAxE,gBAGA,0BAAMM,UAAU,iBAAiBG,QAAS,kBAAM,EAAKP,cAAcP,EAAQK,OAA3E,sC,GAtGvBd,aA2HzCgE,EAAYhC,YAAcrD,E,iDC5HL4F,E,2MAEjBzF,MAAQ,CACJ2B,aAASxB,G,EAGboF,kB,sBAAoB,gCAAAhG,EAAA,6DACRgC,EAAO,EAAKP,MAAMoE,MAAMC,OAAxB9D,GADQ,SAEoBvC,IAAMW,IAAN,oEAAuE4B,IAF3F,gBAEAI,EAFA,EAERS,KAAQT,QAChB,EAAKtB,SAAS,CACVsB,YAJY,2C,wEASV,IACEA,EAAYd,KAAKb,MAAjB2B,QAGR,OAFAnB,QAAQC,IAAIkB,GAGR,kBAAC,EAAD,KACI,6BAASW,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,6CACVX,GAEG,yBAAKW,UAAU,6BACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,6BAA6BX,EAAQ8B,KAAnD,IAA0D9B,EAAQ+B,UAAlE,IAA8E/B,EAAQgC,WACtF,wBAAIrB,UAAU,gCAAgCX,EAAQL,MAAMkC,MAAO7B,EAAQL,MAAMA,OACjF,uBAAGgB,UAAU,4BAAb,SAA8C,gCAASX,EAAQiC,IAAjB,mBAAkC,gCAASjC,EAAQkC,SAAjG,OAGR,yBAAKvB,UAAU,qBACX,yBAAKA,UAAU,UACVX,EAAQ+D,cAAgB/D,EAAQ+D,aAAaf,KAAI,SAACgB,EAAIf,GAAL,OAC9C,wBAAIC,IAAKD,GACL,wBAAItC,UAAU,aAAd,SAAgC,gCAASqD,EAAGC,OAAZ,OAChC,wBAAItD,UAAU,aAAd,WAAkC,gCAASqD,EAAGE,OAAZ,MAClC,wBAAIvD,UAAU,aAAd,WAAkC,gCAASqD,EAAGG,IAAZ,OAClC,wBAAIxD,UAAU,aAAd,cAAqC,gCAASqD,EAAGI,SAAZ,SACrC,wBAAIzD,UAAU,aAAd,iBAAwC,gCAASqD,EAAGK,cACpD,wBAAI1D,UAAU,aAAd,kBAAyC,gCAASqD,EAAGM,YACrD,wBAAI3D,UAAU,aAAd,YAAmC,gCAASqD,EAAGO,cAAZ,QACnC,wBAAI5D,UAAU,aAAd,iBAAwC,gCAASqD,EAAGQ,YACpD,wBAAI7D,UAAU,aAAd,kCAAyD,gCAASqD,EAAGS,iBAAZ,SACzD,wBAAI9D,UAAU,aAAd,kCAAyD,gCAASqD,EAAGU,gBAAZ,SACzD,wBAAI/D,UAAU,aAAd,2CAA+D,gCAASqD,EAAGW,kBAAZ,SAC/D,wBAAIhE,UAAU,aAAd,oBAA2C,gCAASqD,EAAGY,OAAZ,OAC3C,wBAAIjE,UAAU,aAAd,uCAAwD,gCAAUkE,KAAKC,MAAMd,EAAGe,YAK5F,yBAAKpE,UAAU,oBAGnB,yBAAKA,UAAU,+BACf,wBAAIA,UAAU,iCAAd,qBACI,yBAAKA,UAAU,eACX,kBAAC,IAAD,CACIqE,cAAe,GACfC,MAAOC,IAAaC,UAEpB,kBAAC,IAAD,CACIC,WAAY,CAAC,eAAgB,kBAEjC,kBAAC,IAAD,CACIC,eAAa,IAEjB,kBAAC,IAAD,CACIC,WAAY,QAGXtF,EAAQ+D,cAAgB/D,EAAQ+D,aAAaf,KAAI,SAACgB,EAAIf,GAAL,OAE9C,kBAAC,IAAD,CAAYC,IAAKD,EACbxC,KAAM,CAAC,CAAE8E,EAAGtC,EAAI,EAAGuC,EAAGxB,EAAGe,0B,GAjFlDxF,aAwG3CuE,EAAcvC,YAAcrD,E,ICzGtBuH,E,2MACJpH,MAAQ,CACNV,KAAM,CAAEgE,SAAU,OAAQ+D,SAAU,Q,EAGtClD,YAAc,SAACJ,GAAO,IACZzE,EAAS,EAAKU,MAAdV,KAERA,EADYyE,EAAEK,OAAOX,MACTM,EAAEK,OAAOrD,MACrB,EAAKV,SAAS,CAAEf,U,EAGlBkF,SAAW,SAACT,GACVA,EAAEC,iBACF5E,EAAaK,MAAM,EAAKO,MAAMV,MAC3BgB,MAAK,SAACC,GACL,EAAKmC,QAAQtC,QAAQG,EAAS6B,KAAK9C,MACnC,EAAK0B,MAAMqC,QAAQgB,KAAK,iBAEzB3D,OAAM,SAACuE,GACNzE,QAAQC,IAAIwE,O,wEAKhB,OACE,yBAAK3C,UAAU,aACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,4BACb,uBAAGA,UAAU,uBACb,0BAAMA,UAAU,sBAAsBkC,SAAU3D,KAAK2D,UACnD,yBAAKlC,UAAU,gBACb,wBAAIA,UAAU,cAAd,YACA,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,sBACA,2BAAOA,UAAU,kBAAkBmC,SAAU5D,KAAKsD,YAAaxB,KAAK,OAAOc,KAAK,cAElF,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,kBACA,2BAAOA,UAAU,kBAAkBmC,SAAU5D,KAAKsD,YAAaxB,KAAK,WAAWc,KAAK,cAEtF,yBAAKnB,UAAU,SACb,iGAAmE,kBAAC,IAAD,CAAMC,GAAI,WAAV,aAGrE,yBAAKD,UAAU,SACb,2BAAOA,UAAU,iCAAiCK,KAAK,SAAS5B,MAAM,oB,GA9CpEG,aAyDpBkG,EAAMlE,YAAcrD,EAELuH,QC3DME,E,2MAEnBtH,MAAQ,CACNV,KAAM,GACNiI,UAAU,EACVC,WAAW,G,EAGbpG,Q,sBAAU,4BAAA7B,EAAA,sEACe4B,EAAaC,QAAQ,EAAKsB,QAAQ1C,MAAMC,YADvD,OACFM,EADE,OAER,EAAKF,SACH,CAAEf,KAAMiB,EAAS6B,KAAK9C,KAAMkI,WAAW,IAHjC,2C,EAYVC,WAAa,WACX,EAAKpH,UAAS,SAAAiF,GAAS,MAAK,CAAEiC,UAAWjC,EAAUiC,c,mFALnD,IAAK1G,KAAK6B,QAAQ1C,MAAMC,WAAY,OAAOY,KAAKG,MAAMqC,QAAQgB,KAAK,UACnExD,KAAKO,Y,+BAOG,IAAD,EACqBP,KAAKb,MAAzBV,EADD,EACCA,KAAMkI,EADP,EACOA,UACdhH,QAAQC,IAAInB,GAMZ,OAHIuB,KAAKb,MAAMuH,UADC,CAAC,WAELlD,KAAK,QAGf,kBAAC,EAAD,KACM,yBAAK/B,UAAU,kCAEb,yBAAKA,UAAU,gCAGb,yBAAKA,UAAU,UACZkF,GAAa,yBAAKlF,UAAU,qBAC3B,0BAAMA,UAAU,cAGlB,wBAAIA,UAAU,iBAAd,eAA0C,0BAAMA,UAAU,cAAchD,EAAKgE,SAAnC,IAA8ChE,EAAKoE,YAE7F,6BAEA,wBAAIpB,UAAU,aAAd,iCAEA,wBAAIA,UAAU,iBAAd,cAEA,6BACA,wBAAIA,UAAU,iBAAd,oBACA,6BAEA,wBAAIA,UAAU,iBAAd,0BACA,kDACA,qC,GA1DqBpB,a,yjBAmEvCoG,EAAUpE,YAAcrD,E,ICnEH6H,E,2MAEjB1H,MAAQ,CACJsB,MAAO,CACHkC,MAAO,GACPlC,MAAO,IAEXhC,KAAM,GACNiB,cAAUJ,G,EAiBdyB,S,uCAAW,WAAMmC,GAAN,iBAAAxE,EAAA,6DACPwE,EAAEC,iBACI2D,EAAO,EAAK3H,MAFX,SAGgBmB,EAAaS,SAAS+F,GAHtC,OAGDpH,EAHC,OAIP,EAAKF,SACD,CAAEiB,MAAOf,EAAS6B,KAAK6B,MAE3BzD,QAAQC,IAAIF,EAAS6B,KAAK6B,KAPnB,2C,wDAUXE,YAAc,SAAAJ,GACV,EAAK1D,SAAS,CACViB,MAAM,KACC,EAAKtB,MAAMsB,MADb,eAEAyC,EAAEK,OAAOX,KAAOM,EAAEK,OAAOrD,QAE9BzB,KAAM,EAAKoD,QAAQ1C,MAAMC,c,mFA7B7B,IAAKY,KAAK6B,QAAQ1C,MAAMC,WAAY,OAAOY,KAAKG,MAAMqC,QAAQgB,KAAK,Y,+BAiC7D,IACE/C,EAAUT,KAAKb,MAAfsB,MAER,OACI,kBAAC,EAAD,KACI,6BAASgB,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,cAAd,yBACA,0BAAMkC,SAAU3D,KAAKe,UAEjB,yBAAKU,UAAU,SACX,yBAAKA,UAAU,cAEX,yBAAKA,UAAU,uBACX,4BAAQmB,KAAK,QAAQ1C,MAAOO,EAAMkC,MAAOiB,SAAU5D,KAAKsD,aACpD,4BAAQO,UAAQ,IAChB,4BAAQ3D,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,SAIR,yBAAKuB,UAAU,uBACX,4BAAQmB,KAAK,QAAQ1C,MAAOO,EAAMA,MAAOmD,SAAU5D,KAAKsD,aACpD,4BAAQO,UAAQ,IAChB,4BAAQ3D,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,SAMhB,yBAAKuB,UAAU,SACX,4BAAQA,UAAU,iCAAiCK,KAAK,UAAxD,2B,GAvFdzB,a,8NAsGtCwG,EAASxE,YAAcrD,E,ICpGF+H,E,2MAEjB5H,MAAQ,CACJsB,MAAO,GACPuG,kBAAc1H,G,EAIlB2D,aAAe,SAAC5D,GACZ,EAAKwC,QAAQ9B,aAAaV,I,EAG9B4H,e,sBAAiB,gCAAAvI,EAAA,6DACPgC,EAAK,EAAKP,MAAMoE,MAAMC,OADf,SAEqBlE,EAAaE,SAASE,GAF3C,gBAEGD,EAFH,EAELc,KAAQd,MAChB,EAAKjB,SACD,CAAEiB,UAJO,2C,EAiBjByG,WAAa,SAACxG,GACV,EAAKP,MAAMqC,QAAQgB,KAAnB,6BAA8C9C,IAC9Cf,QAAQC,IAAI,S,EAIhBuH,qBAAuB,WACI,EAAKhI,MAAMsB,MAAMG,SACzBkD,KAAI,SAAChD,GAChB,IAAIkG,EAAelG,EAAQ+D,aAAauC,OACxC,OAAqB,IAAjBJ,GACArH,QAAQC,IAAI,gBACL,EAAKJ,SAAS,CAAEwH,kBACC,IAAjBA,GACPrH,QAAQC,IAAI,YACL,EAAKJ,SAAS,CAAEwH,mBAE3BrH,QAAQC,IAAI,gBACL,EAAKJ,SAAS,CAAEwH,sB,EAI/B3F,cAAgB,SAACX,GACbvC,IAAMmD,OAAN,oEAA0EZ,GAAM,CAAEa,KAAM,CAAEb,QACrFjB,MAAK,YAAc,EAAX8B,KACL,EAAK/B,UAAS,SAAAiF,GACV,O,yVAAO,IACAA,MAGX,EAAKC,uBAER7E,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,O,EAGlC4E,kB,sBAAoB,sBAAAhG,EAAA,yDACX,EAAKmD,QAAQ1C,MAAMC,WADR,yCAC2B,EAAKe,MAAMqC,QAAQgB,KAAK,WADnD,OAEhB,EAAKyD,iBAFW,2C,oFAMhBjH,KAAKqB,kB,+BAGC,IAAD,OAEGZ,EAAUT,KAAKb,MAAfsB,MACFG,EAAWZ,KAAKb,MAAMsB,MAAMG,SAIlC,OAFAjB,QAAQC,IAAI,gBAAiBI,KAAKb,OAG9B,kBAAC,EAAD,KACI,6BAASsC,UAAU,WACf,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gCAEVhB,GACG,uBAAGgB,UAAU,cAAa,0BAAMA,UAAU,iBAAhB,UAA1B,IAAyEhB,EAAMkC,MAAOlC,EAAMA,OAEhG,6BACA,yBAAKgB,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMA,UAAU,+BAA+BC,GAAI,wBAC/C,mDACA,0BAAMD,UAAU,iBACZ,uBAAGA,UAAU,oBAMjC,yBAAKA,UAAU,iBACX,2BAAOA,UAAU,iCACb,+BACI,4BACI,6BACA,sCACA,oCACA,yCACA,sCACA,6BACA,+BAGR,+BACKb,GAAYA,EAASkD,KAAI,SAAChD,EAASiD,GAAV,OACtB,wBAAIC,IAAKD,EAAGnC,QAAS,kBAAM,EAAKsF,WAAWpG,EAAQK,OAC/C,4BAAK4C,GACL,4BAAKjD,EAAQ8B,KAAb,IAAoB9B,EAAQ+B,UAA5B,IAAwC/B,EAAQ6D,OAChD,4BAAK7D,EAAQiC,KACb,4BAAKjC,EAAQkC,QAKb,4BAAI,0BAAMvB,UAAU,kBAAhB,oBACJ,4BACI,kBAAC,IAAD,CAAMC,GAAI,2BAA4BE,QAAS,kBAAM,EAAKqB,aAAanC,EAAQK,OAA/E,uBAEJ,4BACI,yBAAKM,UAAU,2BACX,uBAAGA,UAAU,qBACb,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAE,kCAA6BZ,EAAQK,MAAxE,gBAGA,0BAAMM,UAAU,iBAAiBG,QAAS,kBAAM,EAAKP,cAAcP,EAAQK,OAA3E,sC,GA3IvBd,aA+JzC0G,EAAY1E,YAAcrD,E,IChKLqI,E,2MAEjBlI,MAAQ,CACJ2B,QAAS,I,EAIbwC,YAAc,SAAAJ,GAAM,IACRpC,EAAY,EAAK3B,MAAjB2B,QAERA,EADYoC,EAAEK,OAAOX,MACNM,EAAEK,OAAOrD,MACxB,EAAKV,SAAS,CAAEsB,a,EAIpBwG,c,uCAAgB,WAAOpE,GAAP,eAAAxE,EAAA,sEAERwE,EAAEC,iBAFM,SAGe7C,EAAaY,OAAO,EAAK/B,MAAM2B,SAH9C,OAGFpB,EAHE,OAIR,EAAKF,SAAS,CAAEsB,QAAS,EAAK3B,MAAM2B,UACpCnB,QAAQC,IAAIF,EAAS6H,QACrB,EAAKpH,MAAMqC,QAAQgB,KAAK,iBANhB,kDASR7D,QAAQC,IAAR,MATQ,0D,wDAahB8E,kB,sBAAoB,gCAAAhG,EAAA,yDACX,EAAKmD,QAAQ1C,MAAMC,WADR,yCAC2B,EAAKe,MAAMqC,QAAQgB,KAAK,WADnD,cAER9C,EAAO,EAAKP,MAAMoE,MAAMC,OAAxB9D,GAFQ,SAGoBvC,IAAMW,IAAN,oEAAuE4B,IAH3F,gBAGAI,EAHA,EAGRS,KAAQT,QAChB,EAAKtB,SAAS,CACVsB,YALY,2C,wEASV,IACEA,EAAYd,KAAKb,MAAjB2B,QAER,OACI,kBAAC,EAAD,KACI,6BAASW,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBACX,0BAAMkC,SAAU3D,KAAKsH,eACjB,yBAAK7F,UAAU,SACX,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,UACX,4BAAQmB,KAAK,QAAQ1C,MAAOY,EAAQ6B,MAAOiB,SAAU5D,KAAKsD,aACtD,4BAAQO,UAAQ,IAChB,4BAAQ3D,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,SAIR,yBAAKuB,UAAU,UACX,4BAAQmB,KAAK,QAAQ1C,MAAOY,EAAQL,MAAOmD,SAAU5D,KAAKsD,aACtD,4BAAQO,UAAQ,IAChB,4BAAQ3D,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,QAKZ,yBAAKuB,UAAU,SACX,2BAAOA,UAAU,SAAjB,cACA,2BAAOA,UAAU,QAEbmC,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQ8B,KACfd,KAAK,OACLc,KAAK,UAGb,yBAAKnB,UAAU,SACX,2BAAOA,UAAU,SAAjB,qBACA,2BAAOA,UAAU,QAEbmC,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQ+B,UACff,KAAK,OACLc,KAAK,eAIb,yBAAKnB,UAAU,SACX,2BAAOA,UAAU,SAAjB,qBACA,2BAAOA,UAAU,QAEbmC,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQgC,UACfhB,KAAK,OACLc,KAAK,eAIb,yBAAKnB,UAAU,SACX,2BAAOA,UAAU,SAAjB,SACA,2BAAOA,UAAU,QAEbmC,SAAU5D,KAAKsD,YACfpD,MAAOY,EAAQiC,IACfjB,KAAK,SACLc,KAAK,SAIb,yBAAKnB,UAAU,SACX,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,UACX,4BAAQmB,KAAK,SAAS1C,MAAOY,EAAQkC,OAAQY,SAAU5D,KAAKsD,aACxD,4BAAQO,UAAQ,IAChB,4BAAQ3D,MAAM,YAAd,YACA,4BAAQA,MAAM,aAAd,gBAKZ,yBAAKuB,UAAU,SACX,4BAAQA,UAAU,iCAAiCK,KAAK,UAAxD,mC,GAlIfzB,a,yjBAkJzCgH,EAAYhF,YAAcrD,E,IClJLwI,E,2MAEnBrI,MAAQ,CACNE,eAAWC,EACX2B,YAAa,CACX8D,YAAQzF,EACR0F,YAAQ1F,EACR2F,SAAK3F,EACL4F,cAAU5F,EACV6F,iBAAa7F,EACb8F,eAAW9F,EACXmI,aAASnI,EACTgG,eAAWhG,EACXiG,sBAAkBjG,EAClBkG,qBAAiBlG,EACjBmG,uBAAmBnG,EACnBoG,YAAQpG,EACRoI,WAAOpI,EACPqI,SAAKrI,EACLsI,kBAActI,EACduG,SAAKvG,GAEPb,KAAM,GACNiB,cAAUJ,G,EAmBZ0B,e,uCAAiB,WAAMkC,GAAN,uBAAAxE,EAAA,6DACfwE,EAAEC,iBADa,EAEoB,EAAKhE,MAAhC8B,EAFO,EAEPA,YAAa5B,EAFN,EAEMA,UACfwI,EAAQ,CAAE5G,cAAa5B,aAHd,kBAKUiB,EAAaU,eAAe6G,GALtC,OAKPnI,EALO,OAMb,EAAKF,SACH,CAAEE,SAAUA,EAAS6B,KAAK6B,MAE5BzD,QAAQC,IAAIF,EAAS6B,KAAK6B,KATb,kDAYbzD,QAAQC,IAAR,KAAe,KAAEF,UAZJ,0D,wDAkBjBoI,gBAAkB,WAAO,IACf7G,EAAgB,EAAK9B,MAArB8B,YACA8D,EAAwB9D,EAAxB8D,OAAQC,EAAgB/D,EAAhB+D,OAAQC,EAAQhE,EAARgE,IAChBM,EAAiEtE,EAAjEsE,iBAAkBC,EAA+CvE,EAA/CuE,gBAAiBC,EAA8BxE,EAA9BwE,kBAAmBC,EAAWzE,EAAXyE,OAE1DgC,EAAQ1C,EAASA,EAASA,OAAS1F,EACnCqI,EAAO5C,GAAU2C,EAAS3C,EAAS2C,OAAQpI,EAC3CsI,EAAgB5C,GAAUC,EAAOA,EAAMD,OAAS1F,EAEhDuG,EAAON,GAAoBC,GAAmBC,GAAqBC,GAAWH,EAAmBC,EAAkBC,GAAqBC,OAASpG,EAErJ,EAAKE,SAAS,CACZyB,YAAY,KACP,EAAK9B,MAAM8B,YADL,CAET,MAASyG,EACT,IAAOC,EACP,aAAgBC,EAChB,IAAO/B,O,EAKbvC,YAAc,SAAAJ,GACZ,EAAK1D,SAAS,CACZyB,YAAY,KACP,EAAK9B,MAAM8B,YADL,eAERiC,EAAEK,OAAOX,KAAOM,EAAEK,OAAOrD,W,mFAM9B,OAAKF,KAAK6B,QAAQ1C,MAAMC,WACnBY,KAAK6B,QAAQ1C,MAAME,eACxBW,KAAKR,SAAS,CACZH,UAAWW,KAAK6B,QAAQ1C,MAAME,YAFUW,KAAKG,MAAMqC,QAAQuF,SADlB/H,KAAKG,MAAMqC,QAAQgB,KAAK,Y,+BAO3D,IAAD,OACP7D,QAAQC,IAAII,KAAKb,OADV,IAEC8B,EAAgBjB,KAAKb,MAArB8B,YAER,OACE,kBAAC,EAAD,KACE,6BAASQ,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,MAAMkC,SAAU3D,KAAKgB,gBAEnC,yBAAKS,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAY8D,OACnBjD,KAAK,SACLc,KAAK,YAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAY+D,OACnBlD,KAAK,SACLc,KAAK,WAEP,2BAAOnB,UAAU,SAAjB,aAAoCR,EAAYyG,OAChD,2BAAOjG,UAAU,SAAjB,QAA+BR,EAAY0G,MAG7C,yBAAKlG,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYgE,IACnBnD,KAAK,SACLc,KAAK,QAEP,2BAAOnB,UAAU,SAAjB,sBAA6CR,EAAY2G,eAG3D,yBAAKnG,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYiE,SACnBpD,KAAK,SACLc,KAAK,cAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYkE,YACnBrD,KAAK,SACLc,KAAK,iBAKT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYmE,UACnBtD,KAAK,SACLc,KAAK,eAKT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYwG,QACnB3F,KAAK,SACLc,KAAK,aAKT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYqE,UACnBxD,KAAK,SACLc,KAAK,eAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,kCACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYsE,iBACnBzD,KAAK,SACLc,KAAK,sBAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,oCACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYuE,gBACnB1D,KAAK,SACLc,KAAK,qBAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,4CACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYwE,kBACnB3D,KAAK,SACLc,KAAK,uBAIT,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,SAAjB,sBACA,2BAAOA,UAAU,QACfwC,UAAQ,EACRL,SAAU5D,KAAKsD,YACfpD,MAAOe,EAAYyE,OACnB5D,KAAK,SACLc,KAAK,WAEP,2BAAOnB,UAAU,SAAjB,QAA+BR,EAAY4E,MAE7C,yBAAKpE,UAAU,SACb,uBAAGA,UAAU,sBAAsBG,QAAS,kBAAM,EAAKkG,oBAAvD,wBAGF,yBAAKrG,UAAU,SACb,4BAAQA,UAAU,iCAAiCK,KAAK,UAAxD,+B,GAhQgBzB,aA8QxCmH,EAAWnF,YAAcrD,E,IC9QJgJ,E,2MAEjB7I,MAAQ,CACJV,KAAM,I,EAGV8B,Q,sBAAU,gCAAA7B,EAAA,6DACA2E,EAAW,EAAKxB,QAAQ1C,MAAMC,WAC9BsB,EAAK2C,EAASlC,IAFd,SAGiBhD,IAAMW,IAAN,gEAAmE4B,IAHpF,OAGAhB,EAHA,OAIN,EAAKF,SACD,CAAEf,KAAMiB,EAAS6B,KAAK9C,OALpB,2C,wEAUNuB,KAAKG,MAAMqC,QAAQuF,W,0CAInB,IAAK/H,KAAK6B,QAAQ1C,MAAMC,WAAY,OAAOY,KAAKG,MAAMqC,QAAQgB,KAAK,UACnExD,KAAKO,Y,+BAILZ,QAAQC,IAAII,KAAKb,MAAMV,KAAKiF,QAC5B,IAAMA,EAAS1D,KAAKb,MAAMV,KAAKiF,OAE/B,OACI,kBAAC,EAAD,KACI,6BAASjC,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMC,GAAI,cAAV,cAIR,yBAAKD,UAAU,uBACX,yBAAKA,UAAU,eACf,wBAAIA,UAAU,cAAd,sBAIJ,wBAAIA,UAAU,iBACTiC,GAAUA,EAAOI,KAAI,SAACrD,EAAOsD,GAAR,OAClB,wBAAIC,IAAKD,EAAGtC,UAAU,YAClB,kBAAC,IAAD,CAAMC,GAAE,sBAAiBjB,EAAMU,MAC3B,yBAAKM,UAAU,cACX,2BACKhB,EAAMkC,MADX,IACkB,8BAAOlC,EAAMA,SAGnC,wBAAIgB,UAAU,iBAAiBhB,EAAMG,SAASwG,OAA9C,iBAIZ,wBAAI3F,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAI,oBACN,yBAAKD,UAAU,cACX,2CAEI,0BAAMA,UAAU,oC,GAhE7BpB,aA+EvC2H,EAAU3F,YAAcrD,ECvExB,IAkBeiJ,GAlBA,kBACX,kBAAC,IAAD,KACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW3B,IACxC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,UAAUC,UAAWlE,IACvC,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,SAASC,UAAW7B,IACtC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,cAAcC,UAAWJ,IAC3C,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,mBAAmBC,UAAWvB,IAChD,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,kBAAkBC,UAAWrB,IAC/C,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,uBAAuBC,UAAW1F,IACpD,kBAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,gBAAgBC,UAAW/D,IAC7C,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,yBAAyBC,UAAWxD,IACtD,kBAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,8BAA8BC,UAAWf,IAC3D,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,2BAA2BC,UAAWZ,OCf1Ca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjE,MACvB,2DCXNkE,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtJ,MAAK,SAAAuJ,GACjCA,EAAaC,kB","file":"static/js/main.b8678c8a.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseURL = 'https://morning-mountain-24878.herokuapp.com/api';\n\nconst SERVICE = axios.create({ withCredentials: true, baseURL });\n\nconst AUTH_SERVICE = {\n  signup: async (user) => {\n    return await SERVICE.post('/signup', user);\n  },\n\n  login: async (user) => {\n    return await SERVICE.post('/login', user);\n  },\n  logOut: async () => {\n    return await SERVICE.get('/logout');\n  },\n  checkUser: async (user) => {\n    return await SERVICE.get('/user', user);\n  }\n};\n\nexport default AUTH_SERVICE;\n","import React, { Component, createContext } from 'react';\nimport AUTH_SERVICE from '../services/auth';\n//import axios from 'axios'\nexport const MyContext = createContext();\n\nclass MyProvider extends Component {\n  state = {\n    loggedUser: null,\n    studentId: undefined\n  };\n\n  componentDidMount(){\n    this.checkUser()\n  }\n\n  logUser = (loggedUser) => {\n    this.setState({ loggedUser });\n  };\n\n  // checkUser = async () => {\n  //   const response = await axios.get('https://morning-mountain-24878.herokuapp.com/api/user')\n  //   console.log('current user: ', response);\n    \n  //   this.setState({\n  //     loggedUser: response\n  //   })\n  // }\n\n  checkUser = () => {\n    AUTH_SERVICE.checkUser()\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        loggedUser: response\n      })\n    })\n    .catch((err) => console.log(err));\n  }\n\n  logOut = () => {\n    AUTH_SERVICE.logOut()\n      .then((response) => {\n        console.log(response);\n        this.setState({ loggedUser: null });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  setStudentId = (studentId) => {\n    this.setState({ studentId })\n  }\n\n  render() {\n    const { state, logUser, logOut, setStudentId } = this;\n    return (\n      <MyContext.Provider value={{ state, logUser, logOut, setStudentId }}>\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default MyProvider;\n","import axios from 'axios';\nconst baseURL = 'https://morning-mountain-24878.herokuapp.com/api';\n\nconst SERVICE = axios.create({ withCredentials: true, baseURL });\n\nconst MAIN_SERVICE = {\n  getUser: async (user) => {\n    return await SERVICE.get('/user/', user)\n  },\n\n  getGroup: async (group) => {\n    const id = group.id\n    return await SERVICE.get(`/groups/${id}`, group)\n  },\n\n  getStudents: async (students) => {\n    return await SERVICE.get('/students', students)\n  },\n\n  addStudent: async (student) => {\n    return await SERVICE.post(`/students`, student);\n  },\n\n  addGroup: async (group) => {\n    return await SERVICE.post(`/groups`, group);\n  },\n\n  addMeasurement: async(measurement)  => {\n    return await SERVICE.post(`/measures`, measurement);\n  },\n\n  update: async (student) => {\n    const id = student._id\n    return await SERVICE.put(`/editstudent/${id}`, student);\n  },\n\n  deleteStudent: async (student) => {\n    console.log('pizza',student);\n    \n    const id = student\n    return await SERVICE.delete(`/students/${id}`, {data : {id}});\n  }\n  \n}\n\n\n\nexport default MAIN_SERVICE;\n","import { NavLink } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { MyContext } from '../context/index';\n\nexport default class Navbar extends Component {\n\n    render() {\n        return (\n            <>\n                <div className=\"laraTop\">\n                    <NavLink className=\"navbar-item\" to={'/dashboard'}>MonitorEF</NavLink>\n                    <div className=\"navbar-item laraTop-user\">\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\n                            <span className=\"navbar-link\">\n                                <div className=\"laraUser\">\n                                    <span className=\"laraUser-item\"><strong className=\"laraTop-avatar fa fa-user-circle\"></strong>\n                                        <strong>{this.props.profesorName}</strong></span>\n                                </div>\n                            </span>\n\n                            <div className=\"navbar-dropdown\">\n                                <div className=\"navbar-item\">\n                                    <NavLink to={'/groups/all'} className=\"navbar-item\">Perfil</NavLink>\n                                </div>\n                                <hr className=\"navbar-divider\"></hr>\n                                <form className=\"navbar-item\">\n                                    <input className=\"button is-text\" onClick={this.context.logOut} type=\"submit\" value=\"Cerrar sesión\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <p role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                        </p>\n                    </div>\n\n                    <div id=\"laraBurger\" className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                            <NavLink className=\"navbar-item\" activeClassName=\"is-active\" to={'/dashboard'}>Resumen</NavLink>\n                            <div className=\"navbar-item has-dropdown is-hoverable\">\n                                <span className=\"navbar-link\">\n                                    Grupos\n                                </span>\n                                <div className=\"navbar-dropdown is-right\">\n                                    <NavLink to={'/groups/all'} className=\"navbar-item\" activeClassName=\"is-active\">Ver Grupos</NavLink>\n                                    <hr className=\"navbar-divider\" />\n                                    <NavLink to={'/groups/addgroup'} className=\"navbar-item\" activeClassName=\"is-active\">Agregar Grupo</NavLink>\n                                </div>\n                            </div>\n                            <div className=\"navbar-item has-dropdown is-hoverable\">\n                                <span className=\"navbar-link\">\n                                    Alumnos\n                                </span>\n                                <div className=\"navbar-dropdown is-right\">\n                                    <NavLink to={'/students/all'} className=\"navbar-item\" activeClassName=\"is-active\">Ver Alumnos</NavLink>\n                                    <hr className=\"navbar-divider\" />\n                                    <NavLink to={'/students/addstudent'} className=\"navbar-item\" activeClassName=\"is-active\">Agregar Alumno</NavLink>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </nav>\n            </>\n        );\n    }\n}\n\nNavbar.contextType = MyContext;","import React, { Component } from 'react'\nimport Navbar from './Navbar'\nimport { MyContext } from '../context';\n\n\nexport default class Layout extends Component {\n\n  render() {\n    return (\n\n      <MyContext.Consumer>\n        {({ state }) => (\n          <>\n            <Navbar history={this.props.history} profesorName={state.loggedUser && state.loggedUser.username} />\n            <section className=\"section\">\n              <div className=\"container\">\n              {this.props.children}\n                </div>\n              </section>\n          </>\n    )\n  }\n          </MyContext.Consumer>\n       \n    )\n  }\n}\n\nLayout.contextType = MyContext;","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport axios from 'axios';\nimport MAIN_SERVICE from '../../services/main';\nimport Layout from '../../components/Layout';\n\nexport default class AddStudent extends Component {\n\n  state = {\n    student: {\n      level: '',\n      group: '',\n      name: '',\n      lastname1: '',\n      lastname2: '',\n      age: 0,\n      gender: '',\n    },\n    user: {},\n    response: undefined\n  }\n\n  // addStudent = async e => {\n  //   e.preventDefault()\n  //   const { student } = this.state\n  //   try {\n  //     const response = await axios.post('https://morning-mountain-24878.herokuapp.com/api/students', student)\n  //     this.setState({\n  //       response: response.data.msg\n  //     })\n  //     console.log(response)\n  //   }\n  //   catch (e) {\n  //     console.log(e, e.response);\n  //   }\n  // }\n\n  getStudentId = (studentId) => {\n    this.context.setStudentId(studentId);\n  }\n\n\n  addStudent = async e => {\n    e.preventDefault()\n    const { student } = this.state\n    try {\n      const response = await MAIN_SERVICE.addStudent(student)\n      this.setState(\n        { response: response.data.msg }\n      )\n      console.log(response.data.msg)\n    } catch (e) {\n      console.log(e, e.response);\n    }\n  }\n\n  // getGroup = async () => {\n  //   const userData = this.context.state.loggedUser\n  //   const id = userData._id\n  //   const response = await MAIN_SERVICE.getGroup(id)\n  //   this.setState(\n  //     { user: response.data.user }\n  //   )\n  // }\n\n  getGroup = async () => {\n    const userData = this.context.state.loggedUser\n    const id = userData._id\n    const response = await axios.get(`https://morning-mountain-24878.herokuapp.com/api/user/${id}`)\n    this.setState(\n      { user: response.data.user }\n    )\n  }\n\n  handleInput = e => {\n    this.setState({\n      student: {\n        ...this.state.student,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  componentDidMount() {\n    if (!this.context.state.loggedUser) return this.props.history.push('/login')\n    this.getGroup()\n  }\n\n  render() {\n    const { student } = this.state\n    const currentGroups = this.state.user.groups\n    console.log('grouf', currentGroups);\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column box laraContent is-12\">\n                <div className=\"columns is-centered\">\n                  <div className=\"column is-8\">\n                    <form className=\"box\" onSubmit={this.addStudent}>\n                      <div className=\"field\">\n                        <label className=\"label\">Grado</label>\n                        <div className=\"select\">\n                          <select name=\"level\" value={student.level} onChange={this.handleInput} >\n                            <option disabled ></option>\n                            {currentGroups && currentGroups.map((group, i) =>\n                              <option key={i} value={group.level}>{group.level}</option>\n                            )}\n                          </select>\n                        </div>\n                        <div className=\"select\">\n                          <select name=\"group\" value={student.group} onChange={this.handleInput} >\n                            <option disabled ></option>\n                            {currentGroups && currentGroups.map((group, i) =>\n                              <option key={i} value={group.group}>{group.group}</option>\n                            )}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Nombre(s):</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={student.name}\n                          type='text'\n                          name='name'\n                        />\n                      </div>\n                      <div className=\"field\">\n                        <label className=\"label\">Apellido paterno:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={student.lastname1}\n                          type='text'\n                          name='lastname1'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Apellido materno:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={student.lastname2}\n                          type='text'\n                          name='lastname2'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Edad:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={student.age}\n                          type='number'\n                          name='age'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Género:</label>\n                        <div className=\"select\">\n                          <select name=\"gender\" value={student.gender} onChange={this.handleInput} >\n                            <option disabled ></option>\n                            <option value=\"Femenino\">Femenino</option>\n                            <option value=\"Masculino\">Masculino</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"field\">\n                        <button className=\"button is-fullwidth is-primary\" type='submit'>Agregar Alumno</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n\nAddStudent.contextType = MyContext;","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../services/auth';\n\nclass Signup extends Component {\n  state = {\n    user: {\n      userMsg: ''\n    }\n  }\n\n  handleInput = (e) => {\n    const { user } = this.state;\n    const key = e.target.name;\n    user[key] = e.target.value;\n    this.setState({ user });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    AUTH_SERVICE.signup(this.state.user)\n      .then((response) => {\n        let userMsg = response.data.msg\n        this.props.history.push('/login');\n        console.log(userMsg);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const {userMsg} = this.state.user\n    return (\n      <div className=\"columns is-centered is-vcentered hv\">\n        <div className=\"column box is-6\">\n          <p className=\"mesaage is-success\">{userMsg}</p>\n          <form className=\"columns\" onSubmit={this.onSubmit}>\n            <div className=\"column is-12 iron-cover\">\n              <h1 className=\"title is-2\">Sign up</h1>\n              <div className=\"field\">\n                <label className=\"label\">Name:</label>\n                <input className=\"input\" onChange={this.handleInput} type=\"text\" name=\"username\" />\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Apellido paterno:</label>\n                <input className=\"input\" onChange={this.handleInput} type=\"text\" name=\"lastname1\" />\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Apellido materno:</label>\n                <input className=\"input\" onChange={this.handleInput} type=\"text\" name=\"lastname2\" />\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Correo:</label>\n                <input className=\"input\" onChange={this.handleInput} type=\"email\" name=\"email\" />\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Password:</label>\n                <input className=\"input\" onChange={this.handleInput} type=\"password\" name=\"password\" />\n              </div>\n\n              <div className=\"field\">\n              <input className=\"button is-primary is-fullwidth\" type=\"submit\" value=\"Signup\" />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport Layout from '../../components/Layout';\nimport MAIN_SERVICE from '../../services/main';\n\nexport default class AllStudents extends Component {\n\n    state = {\n        students: undefined,\n        group: undefined\n    }\n\n    getStudents = async () => {\n        const response = await MAIN_SERVICE.getStudents()\n        this.setState({\n            students: response.data.students\n        })\n    }\n\n    getGroups = async () => {\n        const { id } = this.props.match.params\n        const { data: { group } } = await axios.get(`https://morning-mountain-24878.herokuapp.com/api/groups/${id}`)\n        this.setState({\n            group\n        })\n    }\n\n    deleteStudent = async (id) => {\n        // axios.delete(`https://morning-mountain-24878.herokuapp.com/api/students/${id}`, { data: { id } })\n        await MAIN_SERVICE.deleteStudent(id)\n            .then(({ data }) => {\n                this.setState(prevState => {\n                    return {\n                        ...prevState,\n                    }\n                })\n                this.componentDidMount()\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        if (!this.context.state.loggedUser) return this.props.history.push('/login')\n        this.getStudents()\n        this.getGroups()\n    }\n    componentDidUpdate() {\n        this.deleteStudent()\n    }\n\n    render() {\n        const { students, group } = this.state;\n        console.log(group);\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered is-desktop\">\n                            <div className=\"column box laraContent is-12\">\n                                <div className=\"columns\">\n                                    <div className=\"column is-12\">\n                                        <div className=\"buttons is-right\">\n                                            <Link className=\"button is-rounded is-primary\" to={'/students/addstudent'}>\n                                                <span>Añadir Alumnos</span>\n                                                <span className=\"icon is-small\">\n                                                    <i className=\"fa fa-plus\"></i>\n                                                </span>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"table-wrapper\">\n                                    <table className=\"table is-fullwidth \">\n                                        <thead>\n                                            <tr>\n                                                <th></th>\n                                                <th>Nombre</th>\n                                                <th>Edad</th>\n                                                <th>Género</th>\n                                                <th>Status</th>\n                                                <th></th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {students && students.map((student, i) =>\n                                                <tr key={i}>\n                                                    <td>{i}</td>\n                                                    <td>{student.name} {student.lastname1} {student.name2}</td>\n                                                    <td>{student.age}</td>\n                                                    <td>{student.gender}</td>\n\n                                                    {/* {timesMeasure === 0 &&\n                                                                \n                                                            } */}\n                                                    <td><span className=\"tag is-warning\">1ra medición</span></td>\n                                                    <td>\n                                                        <Link to={'/students/addmeasurement'} onClick={() => this.getStudentId(student._id)}>Agregar mediciones</Link>\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"laraMore icon is-medium\">\n                                                            <i className=\"fa fa-ellipsis-h\"></i>\n                                                            <div className=\"laraMore-container\">\n                                                                <Link className=\"button is-text\" to={`/students/students/edit/${student._id}`}>\n                                                                    Editar datos\n                                                                        </Link>\n                                                                <span className=\"button is-text\" onClick={() => this.deleteStudent(student._id)}>\n                                                                    Eliminar Alumno\n                                                                        </span>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nAllStudents.contextType = MyContext;","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport axios from 'axios';\nimport { VictoryChart, VictoryTheme, VictoryStack, VictoryAxis, VictoryBar } from 'victory'\nimport Layout from '../../components/Layout';\n\nexport default class StudentDetail extends Component {\n\n    state = {\n        student: undefined\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.props.match.params\n        const { data: { student } } = await axios.get(`https://morning-mountain-24878.herokuapp.com/api/students/${id}`)\n        this.setState({\n            student\n        })\n\n    }\n\n    render() {\n        const { student } = this.state;\n        console.log(student);\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered\">\n\n                            <div className=\"column is-12\">\n                                <div className=\"columns is-centered laraContent is-mobile\">\n                                    {student &&\n\n                                        <div className=\"column box laraPadd is-10\">\n                                            <div className=\"columns is-right\">\n                                                <div className=\"column is-12\">\n                                                    <h1 className=\"title is-1 has-text-right\">{student.name} {student.lastname1} {student.lastname2}</h1>\n                                                    <h2 className=\"subtitle is-3 has-text-right\">{student.group.level}{student.group.group}</h2>\n                                                    <p className=\"is-size-4 has-text-right\">Edad: <strong>{student.age} años, Sexo: <strong>{student.gender}</strong></strong> </p>\n                                                </div>\n                                            </div>\n                                            <div className=\"columns is-center\">\n                                                <div className=\"column\">\n                                                    {student.measurements && student.measurements.map((ms, i) =>\n                                                        <ul key={i}>\n                                                            <li className=\"is-size-5\">Peso: <strong>{ms.weight}kg</strong></li>\n                                                            <li className=\"is-size-5\">Altura: <strong>{ms.height}m</strong></li>\n                                                            <li className=\"is-size-5\">Cadera: <strong>{ms.hip}cm</strong></li>\n                                                            <li className=\"is-size-5\">Velocidad: <strong>{ms.velocity} m/s</strong></li>\n                                                            <li className=\"is-size-5\">Flexibilidad: <strong>{ms.flexibility}</strong></li>\n                                                            <li className=\"is-size-5\">M. Inferiores: <strong>{ms.lowerMass}</strong></li>\n                                                            <li className=\"is-size-5\">Abdomen: <strong>{ms.abdominalFlat} cm</strong></li>\n                                                            <li className=\"is-size-5\">M superiores: <strong>{ms.upperMass}</strong></li>\n                                                            <li className=\"is-size-5\">Frecuencia cardiaca en reposo: <strong>{ms.restingHeartRate} lpm</strong></li>\n                                                            <li className=\"is-size-5\">Frecuencia cardiaca de esfuerzo<strong>{ms.stressHeartRate} lpm</strong></li>\n                                                            <li className=\"is-size-5\">Frecuencia cardiaca en recuperación: <strong>{ms.heartRateRecovery} lpm</strong></li>\n                                                            <li className=\"is-size-5\">Metros corridos: <strong>{ms.meters} m</strong></li>\n                                                            <li className=\"is-size-5\">Índice de capacidad aeróbica: <strong>{ Math.round(ms.ica)}</strong></li>\n                                                        </ul>\n                                                    )}\n                                                </div>\n\n                                                <div className=\"column laraBoy\"></div>\n                                            </div>\n\n                                            <div className=\"columns is-center is-mobile\">\n                                            <h2 className=\"subtitle is-3 has-text-center\">Datos gráficos</h2>\n                                                <div className=\"column is-8\">\n                                                    <VictoryChart\n                                                        domainPadding={10}\n                                                        theme={VictoryTheme.material}\n                                                    >\n                                                        <VictoryAxis\n                                                            tickValues={[\"Ciclo 2019-1\", \"Ciclo 2019-2\"]}\n                                                        />\n                                                        <VictoryAxis\n                                                            dependentAxis\n                                                        />\n                                                        <VictoryStack\n                                                            colorScale={\"warm\"}\n                                                        >\n\n                                                            {student.measurements && student.measurements.map((ms, i) => (\n\n                                                                <VictoryBar key={i}\n                                                                    data={[{ x: i + 1, y: ms.ica }]}\n\n                                                                />\n\n                                                            ))}\n\n                                                        </VictoryStack>\n                                                    </VictoryChart>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nStudentDetail.contextType = MyContext;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport AUTH_SERVICE from '../services/auth';\nimport { MyContext } from '../context';\n\nclass Login extends Component {\n  state = {\n    user: { username: \"lara\", password: \"123\" }\n  }\n\n  handleInput = (e) => {\n    const { user } = this.state;\n    const key = e.target.name;\n    user[key] = e.target.value;\n    this.setState({ user });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    AUTH_SERVICE.login(this.state.user)\n      .then((response) => {\n        this.context.logUser(response.data.user);\n        this.props.history.push('/dashboard');\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"columns is-centered is-vcentered hv is-mobile\">\n          <div className=\"column box animated is-6\">\n            <p className=\"mesaage is-success\"></p>\n            <form className=\"columns is-desktop \" onSubmit={this.onSubmit}>\n              <div className=\"column is-12\">\n                <h1 className=\"title is-2\">Ingresar</h1>\n                <div className=\"field\">\n                  <label className=\"label\">Nombre de usuario:</label>\n                  <input className=\"input ironInput\" onChange={this.handleInput} type=\"text\" name=\"username\" />\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\">Contraseña:</label>\n                  <input className=\"input ironInput\" onChange={this.handleInput} type=\"password\" name=\"password\" />\n                </div>\n                <div className=\"field\">\n                  <p>Si aún no tiene registro de cuenta en el sistema, puede hacerlo <Link to={\"/signup\"}>aquí</Link></p>\n                </div>\n\n                <div className=\"field\">\n                  <input className=\"button is-primary is-fullwidth\" type=\"submit\" value=\"Login\" />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.contextType = MyContext;\n\nexport default Login;","import React, { Component } from 'react';\nimport { MyContext } from '../context/index';\nimport MAIN_SERVICE from '../services/main';\nimport Layout from '../components/Layout';\n\nexport default class Dashboard extends Component {\n\n  state = {\n    user: {},\n    addClass: false,\n    isLoading: true\n  }\n\n  getUser = async () => {\n    const response = await MAIN_SERVICE.getUser(this.context.state.loggedUser)\n    this.setState(\n      { user: response.data.user, isLoading: false }\n    )\n  }\n\n  componentDidMount() {\n    if (!this.context.state.loggedUser) return this.props.history.push('/login')\n    this.getUser()\n  }\n\n  toggleMenu = () => {\n    this.setState(prevState => ({ addClass: !prevState.addClass }));\n  }\n\n  render() {\n    const { user, isLoading } = this.state\n    console.log(user);\n\n    let openClass = [\"laraBar\"];\n    if (this.state.addClass) {\n      openClass.push('open');\n    }\n    return (\n      <Layout>\n            <div className=\"columns is-centered is-desktop\">\n              {/* <div className={openClass.join(' ')}></div> */}\n              <div className=\"column box laraContent is-12\">\n\n                {/* <p className=\"button is-text burger\" onClick={this.toggleMenu}> abre</p> */}\n                <div className=\"column\">\n                  {isLoading && <div className=\"myloaderContainer\">\n                    <span className=\"myloader\"></span>\n                  </div>}\n\n                  <h2 className=\"subtitle is-4\">Hola, Prof. <span className=\"title is-3\">{user.username} {user.lastname1}</span></h2>\n\n                  <hr />\n\n                  <h3 className=\"title is-\">Resumen de tu información </h3>\n\n                  <h4 className=\"subtitle is-4\">Tus grupos</h4>\n\n                  <hr />\n                  <h4 className=\"subtitle is-4\">Total de Alumnos</h4>\n                  <hr />\n\n                  <h4 className=\"subtitle is-4\">Próxima medición</h4>\n                  <strong>Agosto 21 2020</strong>\n                  <hr />\n                </div>\n              </div>\n            </div>\n      </Layout>\n    );\n  }\n}\n\nDashboard.contextType = MyContext;","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport MAIN_SERVICE from '../../services/main';\nimport Layout from '../../components/Layout';\n\nexport default class AddGroup extends Component {\n\n    state = {\n        group: {\n            level: '',\n            group: ''\n        },\n        user: {},\n        response: undefined\n    }\n\n    componentDidMount() {\n        if (!this.context.state.loggedUser) return this.props.history.push('/login')\n    }\n\n    // addGroup = async e => {\n    //     e.preventDefault()\n    //     const body = this.state\n    //     const response = await axios.post('https://morning-mountain-24878.herokuapp.com/api/groups', body)\n    //     this.setState({\n    //         response: response.data.msg\n    //     })\n    //     console.log(response.data.msg);\n    // }\n\n    addGroup = async e => {\n        e.preventDefault()\n        const body = this.state\n        const response = await MAIN_SERVICE.addGroup(body)\n        this.setState(\n            { group: response.data.msg }\n        )\n        console.log(response.data.msg);\n    }\n\n    handleInput = e => {\n        this.setState({\n            group: {\n                ...this.state.group,\n                [e.target.name]: e.target.value\n            },\n            user: this.context.state.loggedUser\n        })\n    }\n\n    render() {\n        const { group } = this.state\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column box laraContent is-12\">\n                                <div className=\"columns is-centered\">\n                                    <div className=\"column is-8\">\n                                        <div className=\"box\">\n                                            <h1 className=\"title is-1\">Añadir nuevo grupo</h1>\n                                            <form onSubmit={this.addGroup}>\n\n                                                <div className=\"field\">\n                                                    <div className=\"field-body\">\n\n                                                        <div className=\"select is-fullwidth\">\n                                                            <select name=\"level\" value={group.level} onChange={this.handleInput} >\n                                                                <option disabled ></option>\n                                                                <option value=\"1ro\">1ro</option>\n                                                                <option value=\"2do\">2do</option>\n                                                                <option value=\"3ro\">3ro</option>\n                                                                <option value=\"4to\">4to</option>\n                                                                <option value=\"5to\">5to</option>\n                                                                <option value=\"6to\">6to</option>\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"select is-fullwidth\">\n                                                            <select name=\"group\" value={group.group} onChange={this.handleInput} >\n                                                                <option disabled ></option>\n                                                                <option value=\"A\">A</option>\n                                                                <option value=\"B\">B</option>\n                                                                <option value=\"C\">C</option>\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"field\">\n                                                    <button className=\"button is-fullwidth is-primary\" type='submit'>Añadir</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nAddGroup.contextType = MyContext;","import { Link } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport axios from 'axios';\nimport Layout from '../../components/Layout'\nimport MAIN_SERVICE from '../../services/main';\n\nexport default class GroupDetail extends Component {\n\n    state = {\n        group: {},\n        timesMeasure: undefined\n    }\n\n\n    getStudentId = (studentId) => {\n        this.context.setStudentId(studentId);\n    }\n\n    getGroupDetail = async () => {\n        const id = this.props.match.params\n        const { data: { group } } = await MAIN_SERVICE.getGroup(id)\n        this.setState(\n            { group }\n        )\n    }\n\n    // getGroupDetail = async () => {\n    //     const { id } = this.props.match.params\n    //     const { data: { group } } = await axios.get(`https://morning-mountain-24878.herokuapp.com/api/groups/${id}`)\n    //     this.setState({\n    //         group\n    //     })\n    //   }\n\n\n    goToDetail = (id) => {\n        this.props.history.push(`/students/students/${id}`)\n        console.log('clic');\n\n    }\n\n    getMeasurementsTimes = () => {\n        const studentsStatus = this.state.group.students\n        studentsStatus.map((student) => {\n            let timesMeasure = student.measurements.length\n            if (timesMeasure === 1) {\n                console.log('Measure once');\n                return this.setState({ timesMeasure })\n            } else if (timesMeasure === 2) {\n                console.log('Complete');\n                return this.setState({ timesMeasure })\n            }\n            console.log('Sin measures');\n            return this.setState({ timesMeasure })\n        })\n    }\n\n    deleteStudent = (id) => {\n        axios.delete(`https://morning-mountain-24878.herokuapp.com/api/students/${id}`, { data: { id } })\n            .then(({ data }) => {\n                this.setState(prevState => {\n                    return {\n                        ...prevState,\n                    }\n                })\n                this.componentDidMount()\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = async () => {\n        if (!this.context.state.loggedUser) return this.props.history.push('/login')\n        this.getGroupDetail()\n    }\n\n    componentDidUpdate() {\n        this.deleteStudent()\n    }\n\n    render() {\n\n        const { group } = this.state;\n        const students = this.state.group.students\n\n        console.log('render status', this.state);\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n\n                        <div className=\"columns is-centered\">\n                            <div className=\"column box laraContent is-12\">\n\n                                {group &&\n                                    <p className=\"title is-2\"><span className=\"subtitle is-3\">grupo:</span> {group.level}{group.group}</p>\n                                }\n                                <hr />\n                                <div className=\"columns\">\n                                    <div className=\"column is-12\">\n                                        <div className=\"buttons is-right\">\n                                            <Link className=\"button is-rounded is-primary\" to={'/students/addstudent'}>\n                                                <span>Añadir Alumnos</span>\n                                                <span className=\"icon is-small\">\n                                                    <i className=\"fa fa-plus\"></i>\n                                                </span>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"table-wrapper\">\n                                    <table className=\"table is-striped is-fullwidth\">\n                                        <thead>\n                                            <tr>\n                                                <th></th>\n                                                <th>Nombre</th>\n                                                <th>Edad</th>\n                                                <th>Género</th>\n                                                <th>Status</th>\n                                                <th></th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {students && students.map((student, i) =>\n                                                <tr key={i} onClick={() => this.goToDetail(student._id)}>\n                                                    <td>{i}</td>\n                                                    <td>{student.name} {student.lastname1} {student.name2}</td>\n                                                    <td>{student.age}</td>\n                                                    <td>{student.gender}</td>\n\n                                                    {/* {timesMeasure === 0 &&\n                                                                \n                                                            } */}\n                                                    <td><span className=\"tag is-warning\">1ra medición</span></td>\n                                                    <td>\n                                                        <Link to={'/students/addmeasurement'} onClick={() => this.getStudentId(student._id)}>Agregar mediciones</Link>\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"laraMore icon is-medium\">\n                                                            <i className=\"fa fa-ellipsis-h\"></i>\n                                                            <div className=\"laraMore-container\">\n                                                                <Link className=\"button is-text\" to={`/students/students/edit/${student._id}`}>\n                                                                    Editar datos\n                                                                        </Link>\n                                                                <span className=\"button is-text\" onClick={() => this.deleteStudent(student._id)}>\n                                                                    Eliminar Alumno\n                                                                        </span>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nGroupDetail.contextType = MyContext;\n\n","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport MAIN_SERVICE from '../../services/main'\nimport axios from 'axios';\nimport Layout from '../../components/Layout';\n\nexport default class EditStudent extends Component {\n\n    state = {\n        student: {},\n\n    }\n\n    handleInput = e => {\n        const { student } = this.state;\n        const key = e.target.name;\n        student[key] = e.target.value;\n        this.setState({ student })\n    }\n\n\n    updateStudent = async (e) => {\n        try {\n            e.preventDefault()\n            const response = await MAIN_SERVICE.update(this.state.student)\n            this.setState({ student: this.state.student })\n            console.log(response.status)\n            this.props.history.push('/students/all')\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    componentDidMount = async () => {\n        if (!this.context.state.loggedUser) return this.props.history.push('/login')\n        const { id } = this.props.match.params\n        const { data: { student } } = await axios.get(`https://morning-mountain-24878.herokuapp.com/api/students/${id}`)\n        this.setState({\n            student\n        })\n    }\n\n    render() {\n        const { student } = this.state\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column box is-12\">\n                                <div className=\"columns is-centered laraContent\">\n                                    <div className=\"column is-12\">\n                                        <div className=\"columns is-centered\">\n                                            <div className=\"column box is-8\">\n                                                <form onSubmit={this.updateStudent}>\n                                                    <div className=\"field\">\n                                                        <label className=\"label\">Grado</label>\n                                                        <div className=\"select\">\n                                                            <select name=\"level\" value={student.level} onChange={this.handleInput} >\n                                                                <option disabled ></option>\n                                                                <option value=\"1ro\">1ro</option>\n                                                                <option value=\"2do\">2do</option>\n                                                                <option value=\"3ro\">3ro</option>\n                                                                <option value=\"4to\">4to</option>\n                                                                <option value=\"5to\">5to</option>\n                                                                <option value=\"6to\">6to</option>\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"select\">\n                                                            <select name=\"group\" value={student.group} onChange={this.handleInput} >\n                                                                <option disabled ></option>\n                                                                <option value=\"A\">A</option>\n                                                                <option value=\"B\">B</option>\n                                                                <option value=\"C\">C</option>\n                                                            </select>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"field\">\n                                                        <label className=\"label\">Nombre(s):</label>\n                                                        <input className=\"input\"\n\n                                                            onChange={this.handleInput}\n                                                            value={student.name}\n                                                            type='text'\n                                                            name='name'\n                                                        />\n                                                    </div>\n                                                    <div className=\"field\">\n                                                        <label className=\"label\">Apellido paterno:</label>\n                                                        <input className=\"input\"\n\n                                                            onChange={this.handleInput}\n                                                            value={student.lastname1}\n                                                            type='text'\n                                                            name='lastname1'\n                                                        />\n                                                    </div>\n\n                                                    <div className=\"field\">\n                                                        <label className=\"label\">Apellido materno:</label>\n                                                        <input className=\"input\"\n\n                                                            onChange={this.handleInput}\n                                                            value={student.lastname2}\n                                                            type='text'\n                                                            name='lastname2'\n                                                        />\n                                                    </div>\n\n                                                    <div className=\"field\">\n                                                        <label className=\"label\">Edad:</label>\n                                                        <input className=\"input\"\n\n                                                            onChange={this.handleInput}\n                                                            value={student.age}\n                                                            type='number'\n                                                            name='age'\n                                                        />\n                                                    </div>\n\n                                                    <div className=\"field\">\n                                                        <label className=\"label\">Género:</label>\n                                                        <div className=\"select\">\n                                                            <select name=\"gender\" value={student.gender} onChange={this.handleInput} >\n                                                                <option disabled ></option>\n                                                                <option value=\"Femenino\">Femenino</option>\n                                                                <option value=\"Masculino\">Masculino</option>\n                                                            </select>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"field\">\n                                                        <button className=\"button is-fullwidth is-primary\" type='submit'>Actualizar datos</button>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nEditStudent.contextType = MyContext;","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\n//import axios from 'axios';\nimport MAIN_SERVICE from '../../services/main';\nimport Layout from '../../components/Layout';\n\nexport default class AddMeasure extends Component {\n\n  state = {\n    studentId: undefined,\n    measurement: {\n      weight: undefined, // peso\n      height: undefined, // estatura\n      hip: undefined, // cintura\n      velocity: undefined, // velocidad\n      flexibility: undefined, // flexibilidad\n      lowerMass: undefined, // masa inferior\n      abdomen: undefined, // abdomen\n      upperMass: undefined, // masa superior\n      restingHeartRate: undefined, // frecuencia cardiaca en reposo\n      stressHeartRate: undefined, // frecuencia cardiaca de esfuerzo\n      heartRateRecovery: undefined, // frecuencia cardiaca de recuperacion\n      meters: undefined, // metros recorridos\n      power: undefined, // potencia -> se calcula\n      imc: undefined, // imc -> se calcula\n      abdominalFat: undefined, // % de grasa abdominal -> se calcula\n      ica: undefined //indice de capacidad aerobica -> se calcula\n    },\n    user: {},\n    response: undefined\n  }\n\n  // addMeasurement = async e => {\n  //   e.preventDefault()\n  //   const { measurement, studentId } = this.state\n  //   const body1 = { measurement, studentId }\n  //   try {\n  //     const response = await axios.post('https://morning-mountain-24878.herokuapp.com/api/measures', body1)\n  //     this.setState({\n  //       response: response.data.msg\n  //     })\n  //     console.log(response)\n  //   }\n  //   catch (e) {\n  //     console.log(e, e.response);\n  //   }\n  // }\n\n  addMeasurement = async e => {\n    e.preventDefault()\n    const { measurement, studentId } = this.state\n    const body1 = { measurement, studentId }\n    try {\n      const response = await MAIN_SERVICE.addMeasurement(body1)\n      this.setState(\n        { response: response.data.msg }\n      )\n      console.log(response.data.msg);\n    }\n    catch (e) {\n      console.log(e, e.response);\n    }\n  }\n\n\n\n  calculateValues = () => {\n    const { measurement } = this.state\n    const { weight, height, hip } = measurement\n    const { restingHeartRate, stressHeartRate, heartRateRecovery, meters } = measurement\n\n    let power = height ? height * height : undefined\n    let imc = (weight && power) ? weight / power : undefined\n    let abdominalFat = (height && hip) ? hip / height : undefined\n\n    let ica = (restingHeartRate && stressHeartRate && heartRateRecovery && meters) ? (restingHeartRate + stressHeartRate + heartRateRecovery) / meters : undefined\n\n    this.setState({\n      measurement: {\n        ...this.state.measurement,\n        'power': power,\n        'imc': imc,\n        'abdominalFat': abdominalFat,\n        'ica': ica\n      }\n    })\n  }\n\n  handleInput = e => {\n    this.setState({\n      measurement: {\n        ...this.state.measurement,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  componentDidMount() {\n    if (!this.context.state.loggedUser) return this.props.history.push('/login')\n    if (!this.context.state.studentId) return this.props.history.goBack() // maybe nunca se ocupa, revisar documentación\n    this.setState({\n      studentId: this.context.state.studentId\n    })\n  }\n\n  render() {\n    console.log(this.state)\n    const { measurement } = this.state\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column box is-12\">\n                <div className=\"columns is-centered laraContent\">\n                  <div className=\"column is-8\">\n                    <form className=\"box\" onSubmit={this.addMeasurement}>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Peso:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.weight}\n                          type='number'\n                          name='weight'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Estatura:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.height}\n                          type='number'\n                          name='height'\n                        />\n                        <label className=\"label\">Potencia: {measurement.power}</label>\n                        <label className=\"label\">IMC: {measurement.imc}</label>\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Cintura:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.hip}\n                          type='number'\n                          name='hip'\n                        />\n                        <label className=\"label\">% Grasa abdominal: {measurement.abdominalFat}</label>\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Velocidad:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.velocity}\n                          type='number'\n                          name='velocity'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Flexibilidad:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.flexibility}\n                          type='number'\n                          name='flexibility'\n                        />\n                      </div>\n\n\n                      <div className=\"field\">\n                        <label className=\"label\">M.Inferior:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.lowerMass}\n                          type='number'\n                          name='lowerMass'\n                        />\n                      </div>\n\n\n                      <div className=\"field\">\n                        <label className=\"label\">Abdome:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.abdomen}\n                          type='number'\n                          name='abdomen'\n                        />\n                      </div>\n\n\n                      <div className=\"field\">\n                        <label className=\"label\">M.Superior:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.upperMass}\n                          type='number'\n                          name='upperMass'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Frecuencia cardiaca en reposo:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.restingHeartRate}\n                          type='number'\n                          name='restingHeartRate'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Frecuencia cardiaca de esfuerzo:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.stressHeartRate}\n                          type='number'\n                          name='stressHeartRate'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Freccuencia cardiaca en recuperación:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.heartRateRecovery}\n                          type='number'\n                          name='heartRateRecovery'\n                        />\n                      </div>\n\n                      <div className=\"field\">\n                        <label className=\"label\">Metros recorridos:</label>\n                        <input className=\"input\"\n                          required\n                          onChange={this.handleInput}\n                          value={measurement.meters}\n                          type='number'\n                          name='meters'\n                        />\n                        <label className=\"label\">ICA: {measurement.ica}</label>\n                      </div>\n                      <div className=\"field\">\n                        <p className=\"button is-fullwidth\" onClick={() => this.calculateValues()}>Calcular resultados</p>\n                      </div>\n\n                      <div className=\"field\">\n                        <button className=\"button is-fullwidth is-primary\" type='submit'>Agregar Alumno</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n\nAddMeasure.contextType = MyContext;","import React, { Component } from 'react';\nimport { MyContext } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport Layout from '../../components/Layout';\n\nexport default class AllGroups extends Component {\n\n    state = {\n        user: {}\n    }\n\n    getUser = async () => {\n        const userData = this.context.state.loggedUser\n        const id = userData._id\n        const response = await axios.get(`https://morning-mountain-24878.herokuapp.com/api/user/${id}`)\n        this.setState(\n            { user: response.data.user }\n        )\n    }\n\n    goBack() {\n        this.props.history.goBack();\n    }\n\n    componentDidMount() {\n        if (!this.context.state.loggedUser) return this.props.history.push('/login')\n        this.getUser()\n    }\n\n    render() {\n        console.log(this.state.user.groups);\n        const groups = this.state.user.groups\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered is-desktop\">\n                            <div className=\"column box laraContent is-12\">\n                                <div className=\"columns\">\n                                    <div className=\"column is-12\">\n                                        <Link to={'/dashboard'}>Regresar</Link>\n                                    </div>\n                                </div>\n\n                                <div className=\"columns is-centered\">\n                                    <div className=\"column is-6\">\n                                    <h3 className=\"title is-3\">Todos los grupos</h3>\n                                    </div>\n                                </div>\n                                \n                                <ul className=\"laraContainer\" >\n                                    {groups && groups.map((group, i) =>\n                                        <li key={i} className=\"animated\">\n                                            <Link to={`/groups/all/${group._id}`}>\n                                                <div className=\"laraCircle\">\n                                                    <p>\n                                                        {group.level} <span>{group.group}</span>\n                                                    </p>\n                                                </div>\n                                                <em className=\"has-text-grey\">{group.students.length} alumnos</em>\n                                            </Link>\n                                        </li>\n                                    )}\n                                    <li className=\"animated\">\n                                        <Link to={'/groups/addgroup'}>\n                                            <div className=\"laraCircle\">\n                                                <p>\n                                                    Agregar grupo\n                                                    <span className=\"fa fa-plus-circle\"></span>\n                                                </p>\n                                            </div>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nAllGroups.contextType = MyContext;","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport AddStudent from './pages/students/AddStudent'\nimport Signup from './components/Signup'\nimport AllStudents from './pages/students/AllStudents'\nimport StudentDetail from './pages/students/StudentDetail'\nimport Login from './components/Login'\nimport Dashboard from './pages/Dashboard'\nimport AddGroup from './pages/groups/AddGroup'\nimport GroupDetail from './pages/groups/GroupDetail'\nimport EditStudent from './pages/students/EditStudent'\nimport AddMeasure from './pages/students/AddMeassure'\nimport AllGroups from './pages/groups/AllGroups'\n\nconst Router = () => (\n    <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/dashboard\" component={Dashboard} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/groups/all\" component={AllGroups} />\n      <Route exact path=\"/groups/addgroup\" component={AddGroup} />\n      <Route exact path=\"/groups/all/:id\" component={GroupDetail} />\n      <Route exact path=\"/students/addstudent\" component={AddStudent} />\n      <Route exact path=\"/students/all\" component={AllStudents} />\n      <Route exact path=\"/students/students/:id\" component={StudentDetail} />\n      <Route exact path=\"/students/students/edit/:id\" component={EditStudent} />\n      <Route exact path=\"/students/addmeasurement\" component={AddMeasure} />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport MyProvider from './context';\n\nReactDOM.render(\n  <MyProvider>\n    <Router />\n  </MyProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}